def π₀[a,b](d: Distribution[a×b])⇒ infer(()=>sample(d)[0]);
def π₁[a,b](d: Distribution[a×b])⇒ infer(()=>sample(d)[1]);

def disintegrate[b](d: Distribution[ℝ×b]):ℝ→Distribution[b]⇒
	(x:ℝ)⇒infer((){
		(s,t):=sample(d);
		cobserve(s,x);
		return t;
	});

def ex1(){
	x:=uniform(0,1);
	y:=uniform(0,1);
	t:=y-2·x;
	return (t,(x,y));
}

def ex2(){
	x:=uniform(0,1);
	y:=uniform(0,1);
	t:=y/x;
	return (t,(x,y));
}

def main(){
	e₀:=expectation(π₀(disintegrate(infer(ex1))(0)));
	e₁:=expectation(π₀(disintegrate(infer(ex2))(2)));
	return (e₀,e₁); // expected: δ(1/3)[e₁]·δ(1/4)[e₀]
}
