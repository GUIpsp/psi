// skipped

def drawCard() {
    i := flip(3/4);
    return 2*i + 2;
}

def main(){
    S := 4;
    dealer := 0:ℤ;
    last := 0;
    for j in [0..3){
        if dealer <= S {
            last = drawCard();
			dealer += last;
        }
    }
	dealer -= last;
    assert(dealer <= S);
    assert(dealer + last > S);

	player := last;
    bestGain := -1:ℝ;
    bestC := -1;
    for c in [0..5) {
        for j in [0..3) {
            if player <= c {
                player += drawCard();
            }
        }
        assert(player > c);

        thisGain := 0:ℤ;
        if player > dealer && player <= S {
            thisGain = 1;
        } else if player == dealer {
            thisGain = 0;
        } else {
            thisGain = -1;
        }
        expGain := Expectation(thisGain);
        if expGain > bestGain {
            bestGain = expGain;
            bestC = c;
        }
    }
    assert(bestC == 2); // taking cards when sum==2 is always good
    return bestGain; // expected: δ(9/256)[bestGain]
}
