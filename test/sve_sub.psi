def maink(){
    dd := uniform(0,1)+uniform(0,1);
    r := uniform(0,1) + gauss(dd,1);// + gauss(10,1);
    //r := Gauss(dd,1);
    return r; // expected: (d/dx)⁻¹[e^(-x²)](-r·⅟√̅2+⅟√̅2)·3/2·⅟√̅π+(d/dx)⁻¹[e^(-x²)](-r·⅟√̅2+⅟√̅2+√̅2)·1/2·⅟√̅π+(d/dx)⁻¹[e^(-x²)](-⅟√̅2+-√̅2+r·⅟√̅2)·3·r·⅟√̅π+(d/dx)⁻¹[e^(-x²)](-⅟√̅2+r·⅟√̅2)·3·r·⅟√̅π+(d/dx)⁻¹[e^(-x²)](-√̅2+r·⅟√̅2)·3/2·r²·⅟√̅π+(d/dx)⁻¹[e^(-x²)](-√̅2+r·⅟√̅2)·6·⅟√̅π+(d/dx)⁻¹[e^(-x²)](r·⅟√̅2)·1/2·r²·⅟√̅π+-(d/dx)⁻¹[e^(-x²)](-r·⅟√̅2)·⅟√̅π·1/2+-(d/dx)⁻¹[e^(-x²)](-r·⅟√̅2+√̅2)·⅟√̅π·3/2+-(d/dx)⁻¹[e^(-x²)](-⅟√̅2+-√̅2+r·⅟√̅2)·r²·⅟√̅π·1/2+-(d/dx)⁻¹[e^(-x²)](-⅟√̅2+-√̅2+r·⅟√̅2)·⅟√̅π·9/2+-(d/dx)⁻¹[e^(-x²)](-⅟√̅2+r·⅟√̅2)·r²·⅟√̅π·3/2+-(d/dx)⁻¹[e^(-x²)](-⅟√̅2+r·⅟√̅2)·⅟√̅π·3/2+-(d/dx)⁻¹[e^(-x²)](-√̅2+r·⅟√̅2)·r·⅟√̅π·6+-e^(-1/2+-1/2·r²+r)·r·⅟2^(3/2)·⅟√̅π+-e^(-1/2+-1/2·r²+r)·r·⅟√̅2·⅟√̅π+-e^(-1/2+-1/2·r²+r)·⅟2^(3/2)·⅟√̅π+-e^(-1/2·r²+-2+2·r)·r·⅟2^(3/2)·⅟√̅π+-e^(-1/2·r²+-2+2·r)·⅟√̅2·⅟√̅π+-e^(-1/2·r²+-2+2·r)·⅟√̅π·√̅2+-e^(-1/2·r²+-9/2+3·r)·r·⅟2^(3/2)·⅟√̅π+-r·⅟2^(3/2)·⅟e^(1/2·r²)·⅟√̅π+e^(-1/2+-1/2·r²+r)·⅟√̅π·√̅2+e^(-1/2·r²+-2+2·r)·r·⅟√̅π·√̅2+e^(-1/2·r²+-9/2+3·r)·⅟2^(3/2)·⅟√̅π+e^(-1/2·r²+-9/2+3·r)·⅟√̅2·⅟√̅π+r·⅟e^(1/2·r²)·⅟√̅2·⅟√̅π
    // TODO: evaluate normalization constant (need to evaluate the limit more quickly)
}
