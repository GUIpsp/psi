def maink(){
    dd := uniform(0,1)+uniform(0,1);
    r := uniform(0,1) + gauss(dd,1);// + gauss(10,1);
    //r := Gauss(dd,1);
    return r; // expected: ((d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+⅟√2̅)·3/2+(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+⅟√2̅+√2̅)·1/2+(d/dx)⁻¹[e^(-x²)](-⅟√2̅+-√2̅+r·⅟√2̅)·3·r+(d/dx)⁻¹[e^(-x²)](-⅟√2̅+r·⅟√2̅)·3·r+(d/dx)⁻¹[e^(-x²)](-√2̅+r·⅟√2̅)·3/2·r²+(d/dx)⁻¹[e^(-x²)](-√2̅+r·⅟√2̅)·6+(d/dx)⁻¹[e^(-x²)](r·⅟√2̅)·1/2·r²+-(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅)·1/2+-(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+√2̅)·3/2+-(d/dx)⁻¹[e^(-x²)](-⅟√2̅+-√2̅+r·⅟√2̅)·9/2+-(d/dx)⁻¹[e^(-x²)](-⅟√2̅+-√2̅+r·⅟√2̅)·r²·1/2+-(d/dx)⁻¹[e^(-x²)](-⅟√2̅+r·⅟√2̅)·3/2+-(d/dx)⁻¹[e^(-x²)](-⅟√2̅+r·⅟√2̅)·r²·3/2+-(d/dx)⁻¹[e^(-x²)](-√2̅+r·⅟√2̅)·r·6+-2^(3/2)·⅟e^((-√2̅+r·⅟√2̅)²)+-r·⅟2^(3/2)·⅟e^((-√2̅+r·⅟√2̅)²)+-r·⅟2^(3/2)·⅟e^(1/2·r²)+-r·⅟e^((-⅟√2̅+-√2̅+r·⅟√2̅)²)·⅟√2̅+-r·⅟e^((-⅟√2̅+r·⅟√2̅)²)·√2̅+-⅟2^(3/2)·⅟e^((-⅟√2̅+-√2̅+r·⅟√2̅)²)+-⅟e^((-⅟√2̅+r·⅟√2̅)²)·⅟√2̅+-⅟e^((-√2̅+r·⅟√2̅)²)·⅟√2̅+r·⅟2^(3/2)·⅟e^((-⅟√2̅+-√2̅+r·⅟√2̅)²)+r·⅟2^(3/2)·⅟e^((-⅟√2̅+r·⅟√2̅)²)+r·⅟e^((-√2̅+r·⅟√2̅)²)·√2̅+r·⅟e^(1/2·r²)·⅟√2̅+⅟2^(3/2)·⅟e^((-⅟√2̅+r·⅟√2̅)²)+⅟e^((-⅟√2̅+-√2̅+r·⅟√2̅)²)·√2̅+⅟e^((-⅟√2̅+r·⅟√2̅)²)·√2̅+⅟e^((-√2̅+r·⅟√2̅)²)·√2̅)·⅟√π̅
    // TODO: evaluate normalization constant (need to evaluate the limit more quickly)
}
