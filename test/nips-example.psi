// skipped

def main(){
    a := (uniform(0,2), uniformInt(1,3)/3):‚Ñù^2; // TODO: this should work without annotation
    x := a[flip(1/2)];
    p := infer((){
        y := uniform(0,1);
        observe(y <= x);
        return y;
    });
    return (expectation(p), sample(p));
}


/+
+/

/+def main(){
    x := flip(1/2) + uniform(0,1/2);
    p := infer((){
        y := uniform(0,1);
        observe(y <= x);
        return y;
    });
    return (expectation(p), sample(p));
}+/



/+def main(){
	x := uniform(0,1);
	z := flip(1/2);
	p := infer((){
		y := uniform(0,1);
		observe(x+y<=z+1);
		return y;
	});
	return (x, sample(p));
}+/

/*
// old example
def main(){
  x := uniform(0,1);
  y := uniform(0,1);
  z := x + y;
  observe(z <= 1);
  return x;
}*/
