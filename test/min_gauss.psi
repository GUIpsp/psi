def main(){
	k := 3;
	x := gauss(0,1);
	repeat k-1{
		x = min(x, gauss(0,1));
	}
	return x; // expected: ((((d/dx)⁻¹[e^(-x²)](x·⅟√̅2))²·⅟π^(3/2)·⅟√̅2+-(d/dx)⁻¹[e^(-x²)](x·⅟√̅2)·⅟π·√̅2+-⅟√̅2·⅟√̅π+⅟√̅π·√̅2)·⅟e^(1/2·x²)+(-(d/dx)⁻¹[e^(-x²)](x·⅟√̅2)·⅟e^(1/2·x²)·⅟π^(3/2)+⅟e^(1/2·x²)·⅟π)·(-(d/dx)⁻¹[e^(-x²)](x·⅟√̅2)·√̅2+√̅2·√̅π))·[∫dξ₁(((d/dx)⁻¹[e^(-x²)](ξ₁·⅟√̅2))²·⅟e^(1/2·ξ₁²)·⅟π^(3/2)·⅟√̅2+((d/dx)⁻¹[e^(-x²)](ξ₁·⅟√̅2))²·⅟e^(1/2·ξ₁²)·⅟π^(3/2)·√̅2)≠0]·⅟(∫dξ₁(((d/dx)⁻¹[e^(-x²)](ξ₁·⅟√̅2))²·⅟e^(1/2·ξ₁²)·⅟π^(3/2)·⅟√̅2+((d/dx)⁻¹[e^(-x²)](ξ₁·⅟√̅2))²·⅟e^(1/2·ξ₁²)·⅟π^(3/2)·√̅2))
	// TODO: evaluate normalization constant
	// TODO: gnuplot bug report? (the plotted result has negative values)
}
