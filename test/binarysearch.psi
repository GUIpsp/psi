// skipped
// TODO: transform reasoning about inequalities into reasoning about base representation

b := 6;
def bsearch(x){    
    o := 0;
    m := 0;
    for i in [0..b){
        m = 2^(b sub (i+1));
        if o + m <= x{
            o += m;
        }
    }
    return o;
}

def main(){
    return bsearch(uniformInt(0,2^b-1)); // expected: 1/64·δ(0)[r]+1/64·δ(1)[r]+1/64·δ(10)[r]+1/64·δ(11)[r]+1/64·δ(12)[r]+1/64·δ(13)[r]+1/64·δ(14)[r]+1/64·δ(15)[r]+1/64·δ(16)[r]+1/64·δ(17)[r]+1/64·δ(18)[r]+1/64·δ(19)[r]+1/64·δ(2)[r]+1/64·δ(20)[r]+1/64·δ(21)[r]+1/64·δ(22)[r]+1/64·δ(23)[r]+1/64·δ(24)[r]+1/64·δ(25)[r]+1/64·δ(26)[r]+1/64·δ(27)[r]+1/64·δ(28)[r]+1/64·δ(29)[r]+1/64·δ(3)[r]+1/64·δ(30)[r]+1/64·δ(31)[r]+1/64·δ(32)[r]+1/64·δ(33)[r]+1/64·δ(34)[r]+1/64·δ(35)[r]+1/64·δ(36)[r]+1/64·δ(37)[r]+1/64·δ(38)[r]+1/64·δ(39)[r]+1/64·δ(4)[r]+1/64·δ(40)[r]+1/64·δ(41)[r]+1/64·δ(42)[r]+1/64·δ(43)[r]+1/64·δ(44)[r]+1/64·δ(45)[r]+1/64·δ(46)[r]+1/64·δ(47)[r]+1/64·δ(48)[r]+1/64·δ(49)[r]+1/64·δ(5)[r]+1/64·δ(50)[r]+1/64·δ(51)[r]+1/64·δ(52)[r]+1/64·δ(53)[r]+1/64·δ(54)[r]+1/64·δ(55)[r]+1/64·δ(56)[r]+1/64·δ(57)[r]+1/64·δ(58)[r]+1/64·δ(59)[r]+1/64·δ(6)[r]+1/64·δ(60)[r]+1/64·δ(61)[r]+1/64·δ(62)[r]+1/64·δ(63)[r]+1/64·δ(7)[r]+1/64·δ(8)[r]+1/64·δ(9)[r]
}

